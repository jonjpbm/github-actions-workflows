name: 'Terraform Pull Request'

on:
  pull_request:


jobs:
  terraform-plan:
    name: "Terraform Pull Request"
    runs-on: ubuntu-latest
    steps:
      #----------------------------- Setup -------------------------------#
      # Checkout the code
      # Marketplace: https://github.com/marketplace/actions/checkout
      - name: Setup - Checkout
        uses: actions/checkout@v2.1.0

      # Static analysis of Terraform templates to spot potential security issues
      # Marketplace: https://github.com/marketplace/actions/terraform-security-scan
      - name: Setup - Security Scan
        uses: triat/terraform-security-scan@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Configure AWS credential environment variables for use in other GitHub Actions.
      # https://github.com/aws-actions/configure-aws-credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      # Downloads a specific version of Terraform CLI and adds it to PATH
      # Marketplace: https://github.com/marketplace/actions/hashicorp-setup-terraform
      - name: Setup - Terraform CLI
        uses: hashicorp/setup-terraform@v1

      #https://github.com/marketplace/actions/setup-tflint
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v1
        with:
          tflint_version: latest

      #----------------------------- Action -------------------------------#
      # SSH Keys are setup here because we have terraform modules being referenced via git in
      # private github repos
      - name: Terraform Init
        id: init
        run: terraform init -input=false
        env:
          GIT_SSH_COMMAND: "echo '${{ secrets.GH_SSH_PRIVATE_KEY }}' > id_rsa
          && ssh-keyscan github.com > known_hosts
          && chmod 600 id_rsa known_hosts
          && ssh -i ./id_rsa -o UserKnownHostsFile=./known_hosts"

      # The id value is used for reference in the comment step via "steps.plan.outputs.stdout"
      # Note: Color is disabled to prevent messy characters from appearing in the pull request comment
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        continue-on-error: true
        env:
          GIT_SSH_COMMAND: "echo '${{ secrets.GH_SSH_PRIVATE_KEY }}' > id_rsa
          && ssh-keyscan github.com > known_hosts
          && chmod 600 id_rsa known_hosts
          && ssh -i ./id_rsa -o UserKnownHostsFile=./known_hosts"

      # Submit a comment with the plan output to the pull request
      - name: "Run - Terraform Comment"
        uses: actions/github-script@0.9.0
        env:
          STDOUT: "```${{ steps.plan.outputs.stdout }}```"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: process.env.STDOUT
            })
